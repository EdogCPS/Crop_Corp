import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

data1 = pd.read_csv("Crop_Corp/US Corn Futures Historical Data (1).csv")
data2 =pd.read_csv("Crop_Corp/ChicagoPrecipitationMonthlyData2014-2024.csv")


x_1 =data1("Months (starting at january 2014 as 01)")
x_2 =data1("Monthy Precipitation average")
x=(x_1,x_2)
y =data2("price")

fig, graph = plt.subplots(2)
graph[0].scatter(x_1, y)
graph[0].set_xlabel("Months since January 2014")
graph[0].set_ylabel("Corn Future")

graph[1].scatter(x_2, y)
graph[1].set_xlabel("Percipitation")
graph[1].set_ylabel("Corn Future")

print("Correlation between Annual Precipitation and Fawn Population:",round(x_1.corr(y),2))
print("Correlation between Winter Severity and Fawn Population:",round(x_2.corr(y),2))

plt.tight_layout()
plt.show()
/*
xtrain, xtest, ytrain, ytest= train_test_split(x,y, test_size=.2)

model=LinearRegression().fit(xtrain,ytrain)

coef=np.around(model.coef_,2)
intercept=round(float(model.intercept_),2)
r_squared=round(model.score(x,y),2)

print(f"Model's Linear Equation: y={coef[0]}x1 + {coef[1]}x2 +  + {intercept}")
print("R Squared value:", r_squared)

print("***************")
print("Testing Results")

predict = model.predict(xtest)
predict = np.around(predict, 2)

print("\nTesting Multivariable Model with Testing Data:")
for index in range(len(xtest)):
    actual = ytest[index] # gets the actual y value from the ytest dataset
    predicted_y = predict[index] # gets the predicted y value from the predict variable
    x_coord = xtest[index] # gets the x value from the xtest dataset
    x_coord=x_coord,2

  print("R Squared value:", r_squared)
*/


